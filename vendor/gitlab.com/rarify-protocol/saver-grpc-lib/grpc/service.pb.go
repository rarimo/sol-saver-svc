// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service.proto

package grpc

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Type int32

const (
	Type_NATIVE       Type = 0
	Type_ERC20        Type = 1
	Type_ERC721       Type = 2
	Type_ERC1155      Type = 3
	Type_METAPLEX_NFT Type = 4
	Type_METAPLEX_FT  Type = 5
)

var Type_name = map[int32]string{
	0: "NATIVE",
	1: "ERC20",
	2: "ERC721",
	3: "ERC1155",
	4: "METAPLEX_NFT",
	5: "METAPLEX_FT",
}

var Type_value = map[string]int32{
	"NATIVE":       0,
	"ERC20":        1,
	"ERC721":       2,
	"ERC1155":      3,
	"METAPLEX_NFT": 4,
	"METAPLEX_FT":  5,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c33392ef2c1961ba, []int{0}
}

type MsgTransactionInfoRequest struct {
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *MsgTransactionInfoRequest) Reset()         { *m = MsgTransactionInfoRequest{} }
func (m *MsgTransactionInfoRequest) String() string { return proto.CompactTextString(m) }
func (*MsgTransactionInfoRequest) ProtoMessage()    {}
func (*MsgTransactionInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c33392ef2c1961ba, []int{0}
}
func (m *MsgTransactionInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransactionInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransactionInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransactionInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransactionInfoRequest.Merge(m, src)
}
func (m *MsgTransactionInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransactionInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransactionInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransactionInfoRequest proto.InternalMessageInfo

func (m *MsgTransactionInfoRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type MsgTransactionInfoResponse struct {
	// Collection address on current chain
	Collection    string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	TokenId       string `protobuf:"bytes,2,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	TargetNetwork string `protobuf:"bytes,3,opt,name=targetNetwork,proto3" json:"targetNetwork,omitempty"`
	// Address on target chain
	Receiver  string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
	TokenType Type   `protobuf:"varint,5,opt,name=tokenType,proto3,enum=Type" json:"tokenType,omitempty"`
}

func (m *MsgTransactionInfoResponse) Reset()         { *m = MsgTransactionInfoResponse{} }
func (m *MsgTransactionInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTransactionInfoResponse) ProtoMessage()    {}
func (*MsgTransactionInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c33392ef2c1961ba, []int{1}
}
func (m *MsgTransactionInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransactionInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransactionInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransactionInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransactionInfoResponse.Merge(m, src)
}
func (m *MsgTransactionInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransactionInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransactionInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransactionInfoResponse proto.InternalMessageInfo

func (m *MsgTransactionInfoResponse) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *MsgTransactionInfoResponse) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *MsgTransactionInfoResponse) GetTargetNetwork() string {
	if m != nil {
		return m.TargetNetwork
	}
	return ""
}

func (m *MsgTransactionInfoResponse) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *MsgTransactionInfoResponse) GetTokenType() Type {
	if m != nil {
		return m.TokenType
	}
	return Type_NATIVE
}

func init() {
	proto.RegisterEnum("Type", Type_name, Type_value)
	proto.RegisterType((*MsgTransactionInfoRequest)(nil), "MsgTransactionInfoRequest")
	proto.RegisterType((*MsgTransactionInfoResponse)(nil), "MsgTransactionInfoResponse")
}

func init() { proto.RegisterFile("proto/service.proto", fileDescriptor_c33392ef2c1961ba) }

var fileDescriptor_c33392ef2c1961ba = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcd, 0x6e, 0xda, 0x40,
	0x14, 0x85, 0x3d, 0x60, 0x43, 0xb9, 0xf4, 0xc7, 0x9a, 0x6e, 0x5c, 0x57, 0xb2, 0x10, 0xed, 0x02,
	0x55, 0xc2, 0x2e, 0xae, 0x50, 0xd7, 0x14, 0x99, 0x16, 0xa9, 0xa0, 0xca, 0xb5, 0x50, 0x92, 0x4d,
	0x64, 0x9c, 0xc1, 0x58, 0x38, 0x1e, 0x67, 0x66, 0x42, 0xc4, 0x5b, 0xe4, 0x85, 0xb2, 0xcf, 0x92,
	0x65, 0x96, 0x11, 0xbc, 0x48, 0xe4, 0x51, 0x42, 0x7e, 0x14, 0x76, 0xf7, 0x7c, 0x67, 0xee, 0xe8,
	0xe8, 0x5c, 0xf8, 0x98, 0x33, 0x2a, 0xa8, 0xc3, 0x09, 0x5b, 0x26, 0x11, 0xb1, 0xa5, 0x6a, 0x3a,
	0xf0, 0x69, 0xc4, 0xe3, 0x80, 0x85, 0x19, 0x0f, 0x23, 0x91, 0xd0, 0x6c, 0x98, 0xcd, 0xa8, 0x4f,
	0xce, 0xce, 0x09, 0x17, 0x18, 0x83, 0x3a, 0x0f, 0xf9, 0xdc, 0x40, 0x0d, 0xd4, 0xaa, 0xf9, 0x72,
	0x6e, 0x5e, 0x21, 0x30, 0x5f, 0xdb, 0xe0, 0x39, 0xcd, 0x38, 0xc1, 0x16, 0x40, 0x44, 0xd3, 0x94,
	0x48, 0xe7, 0x7e, 0xf1, 0x09, 0xc1, 0x06, 0x54, 0x05, 0x5d, 0x90, 0x6c, 0x78, 0x62, 0x94, 0xa4,
	0xf9, 0x20, 0xf1, 0x57, 0x78, 0x27, 0x42, 0x16, 0x13, 0x31, 0x26, 0xe2, 0x82, 0xb2, 0x85, 0x51,
	0x96, 0xfe, 0x73, 0x88, 0x4d, 0x78, 0xc3, 0x48, 0x44, 0x92, 0x25, 0x61, 0x86, 0x2a, 0x1f, 0xec,
	0x34, 0xfe, 0x02, 0x35, 0xf9, 0x59, 0xb0, 0xca, 0x89, 0xa1, 0x35, 0x50, 0xeb, 0xbd, 0xab, 0xd9,
	0x62, 0x95, 0x13, 0xff, 0x91, 0x7f, 0x3b, 0x04, 0xb5, 0x40, 0x18, 0xa0, 0x32, 0xee, 0x05, 0xc3,
	0x89, 0xa7, 0x2b, 0xb8, 0x06, 0x9a, 0xe7, 0xf7, 0xdd, 0xef, 0x3a, 0x2a, 0xb0, 0xe7, 0xf7, 0x7f,
	0xba, 0x1d, 0xbd, 0x84, 0xeb, 0x50, 0xf5, 0xfc, 0x7e, 0xa7, 0xd3, 0xed, 0xea, 0x65, 0xac, 0xc3,
	0xdb, 0x91, 0x17, 0xf4, 0xfe, 0xfd, 0xf5, 0x0e, 0x8e, 0xc7, 0x83, 0x40, 0x57, 0xf1, 0x07, 0xa8,
	0xef, 0xc8, 0x20, 0xd0, 0x35, 0x77, 0x02, 0xda, 0xff, 0xb0, 0x08, 0x32, 0x02, 0xfc, 0x9b, 0x88,
	0x17, 0x15, 0x61, 0xd3, 0xde, 0xdb, 0xb4, 0xf9, 0xd9, 0xde, 0xdf, 0xe9, 0xaf, 0x3f, 0xd7, 0x1b,
	0x0b, 0xad, 0x37, 0x16, 0xba, 0xdd, 0x58, 0xe8, 0x72, 0x6b, 0x29, 0xeb, 0xad, 0xa5, 0xdc, 0x6c,
	0x2d, 0xe5, 0xc8, 0x8e, 0x13, 0x91, 0x86, 0x53, 0x3b, 0xa2, 0xa7, 0x0e, 0x0b, 0x59, 0x32, 0x5b,
	0xb5, 0xe5, 0x59, 0x23, 0x9a, 0x3a, 0xbc, 0x88, 0xd2, 0x8e, 0x59, 0x1e, 0xb5, 0xd3, 0x64, 0xea,
	0x14, 0xc3, 0xb4, 0x22, 0xdd, 0x1f, 0x77, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x20, 0x1f, 0x91,
	0x0b, 0x02, 0x00, 0x00,
}

func (m *MsgTransactionInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransactionInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransactionInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintService(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransactionInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransactionInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransactionInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TokenType != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.TokenType))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintService(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TargetNetwork) > 0 {
		i -= len(m.TargetNetwork)
		copy(dAtA[i:], m.TargetNetwork)
		i = encodeVarintService(dAtA, i, uint64(len(m.TargetNetwork)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TokenId) > 0 {
		i -= len(m.TokenId)
		copy(dAtA[i:], m.TokenId)
		i = encodeVarintService(dAtA, i, uint64(len(m.TokenId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Collection) > 0 {
		i -= len(m.Collection)
		copy(dAtA[i:], m.Collection)
		i = encodeVarintService(dAtA, i, uint64(len(m.Collection)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintService(dAtA []byte, offset int, v uint64) int {
	offset -= sovService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgTransactionInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	return n
}

func (m *MsgTransactionInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Collection)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.TokenId)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.TargetNetwork)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.TokenType != 0 {
		n += 1 + sovService(uint64(m.TokenType))
	}
	return n
}

func sovService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozService(x uint64) (n int) {
	return sovService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgTransactionInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransactionInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransactionInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransactionInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransactionInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransactionInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Collection", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Collection = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetNetwork", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetNetwork = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupService = fmt.Errorf("proto: unexpected end of group")
)
